{"version":3,"sources":["componets/bank/Controls/Controls.jsx","componets/bank/Balance/Balance.jsx","componets/bank/TransactionHistory/TransactionHistory.jsx","componets/bank/Dashboard/Dashboard.jsx","App.jsx","index.js","componets/bank/Controls/Controls.module.css","componets/bank/Balance/Balance.module.css","componets/bank/TransactionHistory/TransactionHistory.module.css","componets/bank/Dashboard/Dashboard.module.css"],"names":["Controls","state","value","handleInput","e","setState","target","hadleDeposit","props","deposit","resetForm","handleWithdraw","withdraw","this","className","style","controls","onSubmit","evt","preventDefault","type","input","onChange","button","name","onClick","React","Component","Balance","balance","deposite","TransactionHistory","history","map","item","key","id","amount","date","Dashboard","noMoney","toast","autoClose","unCorrectInput","createNewOperation","typeOperation","valueInput","dateOperation","Date","toLocaleString","shortid","generate","handleCkickDeposit","operation","prevState","Number","handleCkickWithdraw","dashboard","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.50bde729.chunk.js","sourcesContent":["import React from \"react\";\nimport style from \"./Controls.module.css\";\nimport propTypes from \"prop-types\";\n\nclass Controls extends React.Component {\n  state = { value: \"\" };\n\n  handleInput = e => {\n    this.setState({ value: +e.target.value });\n  };\n  hadleDeposit = () => {\n    this.props.deposit(this.state.value);\n    this.resetForm()\n  };\n  handleWithdraw = () => {\n    this.props.withdraw(this.state.value);\n    this.resetForm()\n  };\n  resetForm = () => {\n    this.setState({ value: \"\" });\n  };\n  render() {\n    const { value } = this.state;\n    return (\n      <section className={style.controls}>\n        <form onSubmit={evt => evt.preventDefault()}>\n          <input\n            type=\"number\"\n            className={style.input}\n            onChange={this.handleInput}\n            value={value}\n          />\n          <button\n            type=\"submit\"\n            className={style.button}\n            name=\"deposit\"\n            onClick={this.hadleDeposit}\n          >\n            Deposit\n          </button>\n          <button\n            type=\"submit\"\n            className={style.button}\n            name=\"withdraw\"\n            onClick={this.handleWithdraw}\n          >\n            Withdraw\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\nexport default Controls;\n\nControls.propTypes = {\n  onInputChange: propTypes.func,\n  deposit: propTypes.func,\n  withdraw: propTypes.func,\n  resetForm: propTypes.string\n};\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport style from \"./Balance.module.css\";\n\nconst Balance = ({ balance, deposit, withdraw }) => (\n    <section className={style.balance}>\n      <span className={style.deposite}>⬆ {deposit}$</span>\n      <span className={style.withdraw}>⬇ {withdraw}$</span>\n      <span>Balance: {balance}$</span>\n    </section>\n  );\n\nexport default Balance;\n\nBalance.propTypes = {\n  balance: propTypes.number,\n  deposit: propTypes.number,\n  withdraw: propTypes.number\n};\n","import React from \"react\";\nimport style from \"./TransactionHistory.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst TransactionHistory = ({ history = [] }) => {\n  return (\n    <table className={style.history}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {history.map(item => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}$</td>\n            <td>{item.date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\nexport default TransactionHistory;\n\nTransactionHistory.propTypes = {\n  history: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React from \"react\";\nimport Controls from \"../Controls/Controls\";\nimport Balance from \"../Balance/Balance\";\nimport TransactionHistory from \"../TransactionHistory/TransactionHistory\";\nimport shortid from \"short-id\";\nimport style from \"./Dashboard.module.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass Dashboard extends React.Component {\n  state = {\n    history: [],\n    balance: 0\n  };\n  deposit = 0;\n  withdraw = 0;\n\n  noMoney = () =>\n    toast(\"На счету недостаточно средств для проведения операции!\", {\n      autoClose: 5000\n    });\n  unCorrectInput = () =>\n    toast(\"Введите сумму для проведения операции!\", { autoClose: 5000 });\n\n  createNewOperation = (typeOperation,valueInput) => {\n    const dateOperation = new Date().toLocaleString();\n    return {\n      id: shortid.generate(),\n      type: typeOperation,\n      amount: valueInput,\n      date: dateOperation\n    };\n  };\n  handleCkickDeposit = (valueInput) => {\n    if (valueInput > 0) {\n      const operation = this.createNewOperation(\"Deposit\", valueInput);\n      this.setState(prevState => {\n        return {\n          history: [operation, ...prevState.history],\n          balance: (prevState.balance += Number(operation.amount))\n        };\n      });\n      this.deposit += Number(operation.amount);\n    } else this.unCorrectInput();\n  };\n\n  handleCkickWithdraw = (valueInput) => {\n    if (valueInput && valueInput > 0) {\n      const operation = this.createNewOperation(\"Withdraw\", valueInput);\n      this.setState(prevState => {\n        if (this.state.balance >= valueInput) {\n          return {\n            balance: (prevState.balance -= Number(operation.amount)),\n            history: [operation, ...prevState.history]\n          };\n        } else this.noMoney();\n      });\n      this.withdraw += Number(operation.amount);\n    } else this.unCorrectInput();\n  };\n\n  render() {\n    const { history, balance } = this.state;\n    return (\n      <div className={style.dashboard}>\n        <Controls\n          deposit={this.handleCkickDeposit}\n          withdraw={this.handleCkickWithdraw}\n        />\n        <ToastContainer />\n        <Balance\n          balance={balance}\n          deposit={this.deposit}\n          withdraw={this.withdraw}\n        />\n        <TransactionHistory history={history} />\n      </div>\n    );\n  }\n}\nexport default Dashboard;\n","import React from \"react\";\nimport Dashboard from './componets/bank/Dashboard/Dashboard'\n\n\nfunction App() {\n  return (\n    <div>\n      <Dashboard/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__EXSwi\",\"button\":\"Controls_button__1INCZ\",\"input\":\"Controls_input__3Lma8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__2oOFW\",\"deposite\":\"Balance_deposite__Cq4YK\",\"withdraw\":\"Balance_withdraw__ZZ1h6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__3MrXT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__AmnrB\"};"],"sourceRoot":""}