{"version":3,"sources":["componets/bank/Controls/Controls.jsx","componets/bank/Balance/Balance.jsx","componets/bank/TransactionHistory/TransactionHistory.jsx","componets/bank/Dashboard/Dashboard.jsx","App.jsx","index.js","componets/bank/style.module.css"],"names":["Controls","onInputChange","deposit","withdraw","resetForm","className","style","controls","type","input","onChange","value","button","name","onClick","Balance","balance","deposite","TransactionHistory","history","map","item","key","id","amount","date","Dashboard","noMoney","toast","autoClose","unCorrectInput","handleInput","e","preventDefault","setState","valueInput","target","createNewOperation","typyOperation","dateOperation","Date","toLocaleString","shortid","generate","state","handleCkickDeposit","operation","prevState","Number","handleCkickWithdraw","this","dashboard","React","Component","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b0bc09ae.chunk.js","sourcesContent":["import React from \"react\";\nimport style from \"../style.module.css\";\nimport propTypes from \"prop-types\";\nconst Controls = ({ onInputChange, deposit, withdraw, resetForm}) => {\n  return (\n    <section className={style.controls}>\n      <input\n        type=\"number\"\n        className={style.input}\n        onChange={onInputChange}\n        value={resetForm}\n      />\n      <button\n        type=\"submit\"\n        className={style.button}\n        name=\"deposit\"\n        onClick={deposit}\n      >\n        Deposit\n      </button>\n      <button\n        type=\"button\"\n        className={style.button}\n        name=\"withdraw\"\n        onClick={withdraw}\n      >\n        Withdraw\n      </button>\n    </section>\n  );\n};\nexport default Controls;\n\nControls.propTypes = {\n  onInputChange: propTypes.func,\n  deposit: propTypes.func,\n  withdraw: propTypes.func,\n  resetForm: propTypes.string\n};\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport style from \"../style.module.css\";\n\nconst Balance = ({ balance, deposit, withdraw }) => {\n  return (\n    <section className={style.balance}>\n      <span className={style.deposite}>⬆ {deposit}$</span>\n      <span className={style.withdraw}>⬇ {withdraw}$</span>\n      <span>Balance: {balance}$</span>\n    </section>\n  );\n};\n\nexport default Balance;\n\nBalance.propTypes = {\n  balance: propTypes.number,\n  deposit: propTypes.number,\n  withdraw: propTypes.number\n};\n","import React from \"react\";\nimport style from \"../style.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst TransactionHistory = ({ history = [] }) => {\n  return (\n    <table className={style.history}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {history.map(item => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}$</td>\n            <td>{item.date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\nexport default TransactionHistory;\n\nTransactionHistory.propTypes = {\n  history: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React from \"react\";\nimport Controls from \"../Controls/Controls\";\nimport Balance from \"../Balance/Balance\";\nimport TransactionHistory from \"../TransactionHistory/TransactionHistory\";\nimport shortid from \"short-id\";\nimport style from \"../style.module.css\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass Dashboard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      history: [],\n      balance: 0,\n      deposit: 0,\n      withdraw: 0,\n      valueInput: \"\"\n    };\n  }\n  noMoney = () =>\n    toast(\"На счету недостаточно средств для проведения операции!\", {\n      autoClose: 5000\n    });\n  unCorrectInput = () =>\n    toast(\"Введите сумму для проведения операции!\", { autoClose: 5000 });\n\n  handleInput = e => {\n    e.preventDefault();\n      this.setState({ valueInput: +e.target.value });\n  };\n\n  createNewOperation = typyOperation => {\n    const dateOperation = new Date().toLocaleString();\n    return {\n      id: shortid.generate(),\n      type: typyOperation,\n      amount: this.state.valueInput,\n      date: dateOperation\n    };\n  };\n\n  handleCkickDeposit = () => {\n    if (this.state.valueInput > 0) {\n      const operation = this.createNewOperation(\"Deposit\");\n      this.setState(prevState => {\n        return {\n          history: [operation, ...prevState.history],\n          deposit: (prevState.deposit += Number(operation.amount)),\n          balance: (prevState.balance += Number(operation.amount)),\n          valueInput: \"\"\n        };\n      });\n    } else this.unCorrectInput();\n  };\n\n  handleCkickWithdraw = () => {\n    if (this.state.valueInput !== \"\" && this.state.valueInput > 0) {\n      const operation = this.createNewOperation(\"Withdraw\");\n      this.setState(prevState => {\n        if (this.state.balance >= this.state.valueInput) {\n          return {\n            balance: (prevState.balance -= Number(operation.amount)),\n            valueInput: \"\",\n            history: [operation, ...prevState.history],\n            withdraw: (prevState.withdraw += Number(operation.amount))\n          };\n        } else this.noMoney();\n      });\n    } else this.unCorrectInput();\n  };\n\n  render() {\n    const { history, balance, deposit, withdraw, valueInput } = this.state;\n    return (\n      <div className={style.dashboard}>\n        <Controls\n          onInputChange={this.handleInput}\n          deposit={this.handleCkickDeposit}\n          withdraw={this.handleCkickWithdraw}\n          resetForm={valueInput}\n        />\n        <ToastContainer />\n        <Balance balance={balance} deposit={deposit} withdraw={withdraw} />\n        <TransactionHistory history={history} />\n      </div>\n    );\n  }\n}\nexport default Dashboard;\n","import React from \"react\";\nimport Dashboard from './componets/bank/Dashboard/Dashboard'\n\n\nfunction App() {\n  return (\n    <div>\n      <Dashboard/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"style_dashboard__NS5cx\",\"controls\":\"style_controls__2Jslm\",\"button\":\"style_button__3Xevj\",\"input\":\"style_input__j5u7C\",\"balance\":\"style_balance__1e5dx\",\"deposite\":\"style_deposite__1xLKV\",\"withdraw\":\"style_withdraw__1W-4j\",\"history\":\"style_history__2edFr\"};"],"sourceRoot":""}